(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const c of a.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function o(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(e){if(e.ep)return;e.ep=!0;const a=o(e);fetch(e.href,a)}})();const s={async getChapter(){try{const t=await(await fetch("/api/random-chapter")).json(),o=document.getElementById("chapter"),r=t.chapter;o.dataset.id=t.chapter.id,o.innerText=`${r.subject}-${r.chapter_no}: ${r.title} (${r.book_type})`}catch(n){console.error("API 요청 실패:",n),document.getElementById("chapter").innerText="데이터를 불러올 수 없습니다."}},async addChapter(n){n.preventDefault();const t=document.getElementById("subjectInput").value.trim(),o=document.getElementById("chapterNoInput").value.trim(),r=document.getElementById("titleInput").value.trim(),e=document.getElementById("book_type").value.trim();if(!t||!o||!r||o<=0||!e){alert("모든 필드를 올바르게 입력하세요.");return}try{const a=await fetch("/api/add-chapter",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subject:t,chapter_no:o,title:r,book_type:e})}),c=await a.json();a.ok?(alert("새로운 챕터가 추가되었습니다!"),document.getElementById("subjectInput").value="",document.getElementById("chapterNoInput").value="",document.getElementById("titleInput").value=""):alert("챕터 추가 실패: "+c.error)}catch(a){console.error("챕터 추가 중 오류 발생:",a),alert("서버 오류로 챕터를 추가할 수 없습니다.")}},async markAsStudied(){const n=document.getElementById("chapter").dataset.id;if(!n)return alert("선택된 챕터가 없습니다.");try{const o=await(await fetch("/api/mark-as-studied",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:n})})).json();alert(o.message),getChapter()}catch(t){console.error("학습 완료 실패:",t)}},async loadChapters(){try{const t=await(await fetch("/api/chapters")).json(),o=document.getElementById("chapterList");o.innerHTML="",t.chapters.forEach(r=>{const e=document.createElement("tr"),a=document.createElement("td");a.innerText=r.subject,e.appendChild(a);const c=document.createElement("td");c.innerText=r.chapter_no,e.appendChild(c);const d=document.createElement("td");d.innerText=r.title,e.appendChild(d);const i=document.createElement("td");i.innerText=r.book_type,e.appendChild(i);const l=document.createElement("td");l.innerText=r.review_count,e.appendChild(l);const p=document.createElement("td");p.innerText=r.last_reviewed?new Date(r.last_reviewed).toLocaleDateString():"-",e.appendChild(p),o.appendChild(e)})}catch(n){console.error("챕터 목록 불러오기 실패:",n)}},async login(n,t){try{const o=await fetch("/api/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:n,password:t})}),r=await o.json();o.ok?(localStorage.setItem("token",r.token),alert("로그인 성공!")):alert("로그인 실패: "+r.error)}catch(o){console.error("로그인 중 오류 발생:",o),alert("서버 오류로 로그인을 할 수 없습니다.")}},async getProtectedData(){const n=localStorage.getItem("token");if(!n){alert("로그인이 필요합니다.");return}try{const t=await fetch("/api/protected-endpoint",{headers:{Authorization:"Bearer "+n}});if(!t.ok)throw new Error("인증 실패");const o=await t.json()}catch(t){console.error("보호된 데이터 요청 실패:",t),alert("인증이 필요합니다. 다시 로그인해 주세요.")}}};Object.keys(s).forEach(n=>{window[n]=s[n]});document.getElementById("addChapterForm").addEventListener("submit",addChapter);document.getElementById("refreshButton").addEventListener("click",loadChapters);s.getChapter();s.loadChapters();
